0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.1.10
3 info using node@v0.10.17
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/florianmorel/Travail/Github/vue-route',
7 silly cache add   type: 'directory' }
8 verbose tar pack [ '/Users/florianmorel/.npm/vue-route/1.3.1/package.tgz',
8 verbose tar pack   '/Users/florianmorel/Travail/Github/vue-route' ]
9 verbose tarball /Users/florianmorel/.npm/vue-route/1.3.1/package.tgz
10 verbose folder /Users/florianmorel/Travail/Github/vue-route
11 info prepublish vue-route@1.3.1
12 verbose addLocalTarball adding from inside cache /Users/florianmorel/.npm/vue-route/1.3.1/package.tgz
13 silly cache afterAdd vue-route@1.3.1
14 verbose afterAdd /Users/florianmorel/.npm/vue-route/1.3.1/package/package.json not in flight; writing
15 verbose afterAdd /Users/florianmorel/.npm/vue-route/1.3.1/package/package.json written
16 silly publish { name: 'vue-route',
16 silly publish   version: '1.3.1',
16 silly publish   description: 'Routing directive for Vue.js, inspired by ng-view.',
16 silly publish   main: 'src/index.js',
16 silly publish   scripts:
16 silly publish    { test: 'browserify test/index.js | testling',
16 silly publish      'test-browser': 'beefy test/index.js:test/build.js --debug=false' },
16 silly publish   repository: { type: 'git', url: 'https://github.com/ayamflow/vue-route' },
16 silly publish   keywords: [ 'vue', 'route', 'router', 'page', 'transition' ],
16 silly publish   author: { name: '=', email: '=' },
16 silly publish   license: 'MIT',
16 silly publish   bugs: { url: 'https://github.com/ayamflow/vue-route/issues' },
16 silly publish   devDependencies: { 'function-bind': '^1.0.2', tape: '~3.0.2', vue: '~0.11.3' },
16 silly publish   testling:
16 silly publish    { files: 'test/index.js',
16 silly publish      browsers:
16 silly publish       [ 'ie/9..latest',
16 silly publish         'chrome/22..latest',
16 silly publish         'firefox/16..latest',
16 silly publish         'safari/latest',
16 silly publish         'opera/11.0..latest',
16 silly publish         'iphone/6',
16 silly publish         'ipad/6',
16 silly publish         'android-browser/latest' ] },
16 silly publish   dependencies: { page: '^1.5.0' },
16 silly publish   readme: 'vue-route\n=======\n\nRouting directive for Vue.js **(v0.11)**, inspired by ng-view.\nBased on `v-component` thus benefits from `v-transition`, `keep-alive`, `wait-for`, `transition-mode`.\n\nAllows you to declare your routes on the $root Vue object:\n\n```\nvar root = new Vue({\n    el: \'body\',\n\n    routes: {\n        \'/home\': {\n            componentId: \'fg-home\',\n            isDefault: true\n        },\n        \'/work/:work\': {\n            componentId: \'fg-work\',\n            afterUpdate: \'updateHeader\',\n            data: {\n                defaultColor: \'#3453DD\'\n            }\n        },\n        options: {\n            hashbang: true\n        }\n    },\n})\n\n```\n\nwith minimal markup:\n\n```\n<body>\n    <div v-route></div>\n</body>\n\n```\n\n`vue-route` extends the `v-component` directive by @yyx990803 (on the [vuejs repo](https://github.com/yyx990803/vue/tree/master/src/directives/component.js)). Buy him a coffee if you can.\n\n## Get started\n\n**1.** Install with npm/component(1): `npm i vue-route --save` or `component install ayamflow/vue-route`.\n\n**2.** require and install the plugin:\n\n```\nvar Vue = require(\'vue\'),\n    route = require(\'vue-route\');\n\nVue.use(route); // BOOM\n```\n\n**3.** Put the `<div v-route></div>` in your main template.\n\n**4.** Pass your routes to the $root VM of you app (see example above).\n\n**5.** Profit !\n\n## Additional infos\n\n* routes definition: when you pass your routes to the $root, you can pass several properties:\n    * *componentId*: the Vue.component id for the associated template/VM.\n    * *beforeUpdate*: a callback (method or name of method on the vm) to call before effectively changing to this route\n    * *afterUpdate*: a callback (method or name of method on the vm) to call after effectively having changed to this route\n    * *data*: an object that will be passed back to the view. This is useful when we need to use the same component for different urls but using different data.\n    * *isDefault*: boolean indicating wether this page should be the default, in case of non-existing URL. Think of it as the `otherwise` from Angular, so basically a 404 or the home page.\n\nVue is augmented with an additional method, `Vue.navigate(path, [trigger])`. [trigger] is a boolean (defaults to true) that will `pushState` if true, `replaceState` otherwise.\n\n* The router will emit events on your $root VM: `routing:started`, `routing:beforeUpdate`, `routing:afterUpdate`.\n\n* You can pass a `options` hash to pass configuration to the router:\n    * `hashbang` boolean (defaults to false) to use \'#!\' urls\n    * `click` boolean (defaults to true) to automatically bind all click to the router. Not that if `false`, you will need to explicitly call `Vue.navigate` method)\n    * `base` string (defaults to \'/\') to specify the base path\n    * `broadcast` boolean (defaults to false) if true the events will be emitted using the $root `$broadcast` method, so all child VMs will receive the event until a handler `return false;`. If false, it uses `$emit`.\n    * `debug` boolean (defaults to false) to activate logging from the directive.\n\n## Location context\n\nWhen the router emits an event, 2 parameters are passed: `location` and `oldLocation`. Like in Angular, it is an object containing some useful properties:\n* regexp: the route regexp, such as `/items/:itemId`\n* path: the current path, such as `/items/razor/`\n* params: a hash of the params from the route, here `{item: \'razor\'}`\n* componentId: the componentId associated to the current route',
16 silly publish   readmeFilename: 'README.md',
16 silly publish   gitHead: '9cbacfba88bbb9a7d42ae73f51a91e85d5050221',
16 silly publish   homepage: 'https://github.com/ayamflow/vue-route',
16 silly publish   _id: 'vue-route@1.3.1',
16 silly publish   _shasum: '7f72f2c53a5c5f0796ea9277e4416cb373008c39',
16 silly publish   _from: '.' }
17 silly mapToRegistry name vue-route
18 silly mapToRegistry using default registry
19 silly mapToRegistry registry https://registry.npmjs.org/
20 silly mapToRegistry uri https://registry.npmjs.org/vue-route
21 verbose publish registryBase https://registry.npmjs.org/
22 silly publish uploading /Users/florianmorel/.npm/vue-route/1.3.1/package.tgz
23 verbose request uri https://registry.npmjs.org/vue-route
24 verbose request sending authorization for write operation
25 info attempt registry request try #1 at 16:30:04
26 verbose request id 67b2651786372188
27 http request PUT https://registry.npmjs.org/vue-route
28 http 403 https://registry.npmjs.org/vue-route
29 verbose headers { date: 'Tue, 09 Dec 2014 15:29:40 GMT',
29 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
29 verbose headers   'content-type': 'application/json',
29 verbose headers   'cache-control': 'max-age=60',
29 verbose headers   'content-length': '7046',
29 verbose headers   'accept-ranges': 'bytes',
29 verbose headers   via: '1.1 varnish',
29 verbose headers   'x-served-by': 'cache-ams4138-AMS',
29 verbose headers   'x-cache': 'MISS',
29 verbose headers   'x-cache-hits': '0',
29 verbose headers   'x-timer': 'S1418138978.500643,VS0,VE1513',
29 verbose headers   'keep-alive': 'timeout=10, max=50',
29 verbose headers   connection: 'Keep-Alive' }
30 verbose request invalidating /Users/florianmorel/.npm/registry.npmjs.org/vue-route on PUT
31 error publish Failed PUT 403
32 verbose stack Error: forbidden cannot modify pre-existing version: 1.3.1
32 verbose stack old={"name":"vue-route","version":"1.3.1","description":"Routing directive for Vue.js, inspired by ng-view.","main":"src/index.js","scripts":{"test":"browserify test/index.js | testling","test-browser":"beefy test/index.js:test/build.js --debug=false"},"repository":{"type":"git","url":"https://github.com/ayamflow/vue-route"},"keywords":["vue","route","router","page","transition"],"author":{"name":"=","email":"="},"license":"MIT","bugs":{"url":"https://github.com/ayamflow/vue-route/issues"},"devDependencies":{"function-bind":"^1.0.2","tape":"~3.0.2","vue":"~0.11.3"},"testling":{"files":"test/index.js","browsers":["ie/9..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"dependencies":{"page":"^1.5.0"},"gitHead":"21149ed86ba04a260caf533bda9cb21a92464d2c","homepage":"https://github.com/ayamflow/vue-route","_id":"vue-route@1.3.1","_shasum":"7d675ed5552044b3d2bba00a53bf91908b76e294","_from":".","_npmVersion":"2.1.10","_nodeVersion":"0.10.17","_npmUser":{"name":"ayamflow","email":"ayamflow@gmail.com"},"maintainers":[{"name":"ayamflow","email":"ayamflow@gmail.com"}],"dist":{"shasum":"7d675ed5552044b3d2bba00a53bf91908b76e294","tarball":"http://registry.npmjs.org/vue-route/-/vue-route-1.3.1.tgz"}}
32 verbose stack new={"name":"vue-route","version":"1.3.1","description":"Routing directive for Vue.js, inspired by ng-view.","main":"src/index.js","scripts":{"test":"browserify test/index.js | testling","test-browser":"beefy test/index.js:test/build.js --debug=false"},"repository":{"type":"git","url":"https://github.com/ayamflow/vue-route"},"keywords":["vue","route","router","page","transition"],"author":{"name":"=","email":"="},"license":"MIT","bugs":{"url":"https://github.com/ayamflow/vue-route/issues"},"devDependencies":{"function-bind":"^1.0.2","tape":"~3.0.2","vue":"~0.11.3"},"testling":{"files":"test/index.js","browsers":["ie/9..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"dependencies":{"page":"^1.5.0"},"readme":"vue-route\u000a=======\u000a\u000aRouting directive for Vue.js **(v0.11)**, inspired by ng-view.\u000aBased on `v-component` thus benefits from `v-transition`, `keep-alive`, `wait-for`, `transition-mode`.\u000a\u000aAllows you to declare your routes on the $root Vue object:\u000a\u000a```\u000avar root = new Vue({\u000a    el: 'body',\u000a\u000a    routes: {\u000a        '/home': {\u000a            componentId: 'fg-home',\u000a            isDefault: true\u000a        },\u000a        '/work/:work': {\u000a            componentId: 'fg-work',\u000a            afterUpdate: 'updateHeader',\u000a            data: {\u000a                defaultColor: '#3453DD'\u000a            }\u000a        },\u000a        options: {\u000a            hashbang: true\u000a        }\u000a    },\u000a})\u000a\u000a```\u000a\u000awith minimal markup:\u000a\u000a```\u000a<body>\u000a    <div v-route></div>\u000a</body>\u000a\u000a```\u000a\u000a`vue-route` extends the `v-component` directive by @yyx990803 (on the [vuejs repo](https://github.com/yyx990803/vue/tree/master/src/directives/component.js)). Buy him a coffee if you can.\u000a\u000a## Get started\u000a\u000a**1.** Install with npm/component(1): `npm i vue-route --save` or `component install ayamflow/vue-route`.\u000a\u000a**2.** require and install the plugin:\u000a\u000a```\u000avar Vue = require('vue'),\u000a    route = require('vue-route');\u000a\u000aVue.use(route); // BOOM\u000a```\u000a\u000a**3.** Put the `<div v-route></div>` in your main template.\u000a\u000a**4.** Pass your routes to the $root VM of you app (see example above).\u000a\u000a**5.** Profit !\u000a\u000a## Additional infos\u000a\u000a* routes definition: when you pass your routes to the $root, you can pass several properties:\u000a    * *componentId*: the Vue.component id for the associated template/VM.\u000a    * *beforeUpdate*: a callback (method or name of method on the vm) to call before effectively changing to this route\u000a    * *afterUpdate*: a callback (method or name of method on the vm) to call after effectively having changed to this route\u000a    * *data*: an object that will be passed back to the view. This is useful when we need to use the same component for different urls but using different data.\u000a    * *isDefault*: boolean indicating wether this page should be the default, in case of non-existing URL. Think of it as the `otherwise` from Angular, so basically a 404 or the home page.\u000a\u000aVue is augmented with an additional method, `Vue.navigate(path, [trigger])`. [trigger] is a boolean (defaults to true) that will `pushState` if true, `replaceState` otherwise.\u000a\u000a* The router will emit events on your $root VM: `routing:started`, `routing:beforeUpdate`, `routing:afterUpdate`.\u000a\u000a* You can pass a `options` hash to pass configuration to the router:\u000a    * `hashbang` boolean (defaults to false) to use '#!' urls\u000a    * `click` boolean (defaults to true) to automatically bind all click to the router. Not that if `false`, you will need to explicitly call `Vue.navigate` method)\u000a    * `base` string (defaults to '/') to specify the base path\u000a    * `broadcast` boolean (defaults to false) if true the events will be emitted using the $root `$broadcast` method, so all child VMs will receive the event until a handler `return false;`. If false, it uses `$emit`.\u000a    * `debug` boolean (defaults to false) to activate logging from the directive.\u000a\u000a## Location context\u000a\u000aWhen the router emits an event, 2 parameters are passed: `location` and `oldLocation`. Like in Angular, it is an object containing some useful properties:\u000a* regexp: the route regexp, such as `/items/:itemId`\u000a* path: the current path, such as `/items/razor/`\u000a* params: a hash of the params from the route, here `{item: 'razor'}`\u000a* componentId: the componentId associated to the current route","readmeFilename":"README.md","gitHead":"9cbacfba88bbb9a7d42ae73f51a91e85d5050221","homepage":"https://github.com/ayamflow/vue-route","_id":"vue-route@1.3.1","_shasum":"7f72f2c53a5c5f0796ea9277e4416cb373008c39","_from":".","_npmVersion":"2.1.10","_nodeVersion":"0.10.17","_npmUser":{"name":"ayamflow","email":"ayamflow@gmail.com"},"maintainers":[{"name":"ayamflow","email":"ayamflow@gmail.com"}],"dist":{"shasum":"7f72f2c53a5c5f0796ea9277e4416cb373008c39","tarball":"http://registry.npmjs.org/vue-route/-/vue-route-1.3.1.tgz"}}: vue-route
32 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:234:14)
32 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
32 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:372:22)
32 verbose stack     at Request.EventEmitter.emit (events.js:98:17)
32 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1317:14)
32 verbose stack     at Request.EventEmitter.emit (events.js:117:20)
32 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1265:12)
32 verbose stack     at IncomingMessage.EventEmitter.emit (events.js:117:20)
32 verbose stack     at _stream_readable.js:920:16
32 verbose stack     at process._tickCallback (node.js:415:13)
33 verbose statusCode 403
34 verbose pkgid vue-route
35 verbose cwd /Users/florianmorel/Travail/Github/vue-route
36 error Darwin 12.5.0
37 error argv "node" "/usr/local/bin/npm" "publish"
38 error node v0.10.17
39 error npm  v2.1.10
40 error code E403
41 error forbidden cannot modify pre-existing version: 1.3.1
41 error old={"name":"vue-route","version":"1.3.1","description":"Routing directive for Vue.js, inspired by ng-view.","main":"src/index.js","scripts":{"test":"browserify test/index.js | testling","test-browser":"beefy test/index.js:test/build.js --debug=false"},"repository":{"type":"git","url":"https://github.com/ayamflow/vue-route"},"keywords":["vue","route","router","page","transition"],"author":{"name":"=","email":"="},"license":"MIT","bugs":{"url":"https://github.com/ayamflow/vue-route/issues"},"devDependencies":{"function-bind":"^1.0.2","tape":"~3.0.2","vue":"~0.11.3"},"testling":{"files":"test/index.js","browsers":["ie/9..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"dependencies":{"page":"^1.5.0"},"gitHead":"21149ed86ba04a260caf533bda9cb21a92464d2c","homepage":"https://github.com/ayamflow/vue-route","_id":"vue-route@1.3.1","_shasum":"7d675ed5552044b3d2bba00a53bf91908b76e294","_from":".","_npmVersion":"2.1.10","_nodeVersion":"0.10.17","_npmUser":{"name":"ayamflow","email":"ayamflow@gmail.com"},"maintainers":[{"name":"ayamflow","email":"ayamflow@gmail.com"}],"dist":{"shasum":"7d675ed5552044b3d2bba00a53bf91908b76e294","tarball":"http://registry.npmjs.org/vue-route/-/vue-route-1.3.1.tgz"}}
41 error new={"name":"vue-route","version":"1.3.1","description":"Routing directive for Vue.js, inspired by ng-view.","main":"src/index.js","scripts":{"test":"browserify test/index.js | testling","test-browser":"beefy test/index.js:test/build.js --debug=false"},"repository":{"type":"git","url":"https://github.com/ayamflow/vue-route"},"keywords":["vue","route","router","page","transition"],"author":{"name":"=","email":"="},"license":"MIT","bugs":{"url":"https://github.com/ayamflow/vue-route/issues"},"devDependencies":{"function-bind":"^1.0.2","tape":"~3.0.2","vue":"~0.11.3"},"testling":{"files":"test/index.js","browsers":["ie/9..latest","chrome/22..latest","firefox/16..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6","android-browser/latest"]},"dependencies":{"page":"^1.5.0"},"readme":"vue-route\u000a=======\u000a\u000aRouting directive for Vue.js **(v0.11)**, inspired by ng-view.\u000aBased on `v-component` thus benefits from `v-transition`, `keep-alive`, `wait-for`, `transition-mode`.\u000a\u000aAllows you to declare your routes on the $root Vue object:\u000a\u000a```\u000avar root = new Vue({\u000a    el: 'body',\u000a\u000a    routes: {\u000a        '/home': {\u000a            componentId: 'fg-home',\u000a            isDefault: true\u000a        },\u000a        '/work/:work': {\u000a            componentId: 'fg-work',\u000a            afterUpdate: 'updateHeader',\u000a            data: {\u000a                defaultColor: '#3453DD'\u000a            }\u000a        },\u000a        options: {\u000a            hashbang: true\u000a        }\u000a    },\u000a})\u000a\u000a```\u000a\u000awith minimal markup:\u000a\u000a```\u000a<body>\u000a    <div v-route></div>\u000a</body>\u000a\u000a```\u000a\u000a`vue-route` extends the `v-component` directive by @yyx990803 (on the [vuejs repo](https://github.com/yyx990803/vue/tree/master/src/directives/component.js)). Buy him a coffee if you can.\u000a\u000a## Get started\u000a\u000a**1.** Install with npm/component(1): `npm i vue-route --save` or `component install ayamflow/vue-route`.\u000a\u000a**2.** require and install the plugin:\u000a\u000a```\u000avar Vue = require('vue'),\u000a    route = require('vue-route');\u000a\u000aVue.use(route); // BOOM\u000a```\u000a\u000a**3.** Put the `<div v-route></div>` in your main template.\u000a\u000a**4.** Pass your routes to the $root VM of you app (see example above).\u000a\u000a**5.** Profit !\u000a\u000a## Additional infos\u000a\u000a* routes definition: when you pass your routes to the $root, you can pass several properties:\u000a    * *componentId*: the Vue.component id for the associated template/VM.\u000a    * *beforeUpdate*: a callback (method or name of method on the vm) to call before effectively changing to this route\u000a    * *afterUpdate*: a callback (method or name of method on the vm) to call after effectively having changed to this route\u000a    * *data*: an object that will be passed back to the view. This is useful when we need to use the same component for different urls but using different data.\u000a    * *isDefault*: boolean indicating wether this page should be the default, in case of non-existing URL. Think of it as the `otherwise` from Angular, so basically a 404 or the home page.\u000a\u000aVue is augmented with an additional method, `Vue.navigate(path, [trigger])`. [trigger] is a boolean (defaults to true) that will `pushState` if true, `replaceState` otherwise.\u000a\u000a* The router will emit events on your $root VM: `routing:started`, `routing:beforeUpdate`, `routing:afterUpdate`.\u000a\u000a* You can pass a `options` hash to pass configuration to the router:\u000a    * `hashbang` boolean (defaults to false) to use '#!' urls\u000a    * `click` boolean (defaults to true) to automatically bind all click to the router. Not that if `false`, you will need to explicitly call `Vue.navigate` method)\u000a    * `base` string (defaults to '/') to specify the base path\u000a    * `broadcast` boolean (defaults to false) if true the events will be emitted using the $root `$broadcast` method, so all child VMs will receive the event until a handler `return false;`. If false, it uses `$emit`.\u000a    * `debug` boolean (defaults to false) to activate logging from the directive.\u000a\u000a## Location context\u000a\u000aWhen the router emits an event, 2 parameters are passed: `location` and `oldLocation`. Like in Angular, it is an object containing some useful properties:\u000a* regexp: the route regexp, such as `/items/:itemId`\u000a* path: the current path, such as `/items/razor/`\u000a* params: a hash of the params from the route, here `{item: 'razor'}`\u000a* componentId: the componentId associated to the current route","readmeFilename":"README.md","gitHead":"9cbacfba88bbb9a7d42ae73f51a91e85d5050221","homepage":"https://github.com/ayamflow/vue-route","_id":"vue-route@1.3.1","_shasum":"7f72f2c53a5c5f0796ea9277e4416cb373008c39","_from":".","_npmVersion":"2.1.10","_nodeVersion":"0.10.17","_npmUser":{"name":"ayamflow","email":"ayamflow@gmail.com"},"maintainers":[{"name":"ayamflow","email":"ayamflow@gmail.com"}],"dist":{"shasum":"7f72f2c53a5c5f0796ea9277e4416cb373008c39","tarball":"http://registry.npmjs.org/vue-route/-/vue-route-1.3.1.tgz"}}: vue-route
42 error If you need help, you may report this error at:
42 error     <http://github.com/npm/npm/issues>
43 verbose exit [ 1, true ]
